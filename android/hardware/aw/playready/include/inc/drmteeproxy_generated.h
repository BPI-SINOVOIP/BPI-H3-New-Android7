/**@@@+++@@@@******************************************************************
**
** Microsoft (r) PlayReady (r)
** Copyright (c) Microsoft Corporation. All rights reserved.
**
***@@@---@@@@******************************************************************
*/

/* This source was autogenerated by xbgen.
** DO NOT EDIT THIS SOURCE MANUALLY.
** If changes need to be applied update the XML and regenerate this source.
*/
/*
** This file defines the following generated formats
** XB_DRM_TEE_PROXY_METHOD_REQ
** XB_DRM_TEE_PROXY_APPINFO
** XB_DRM_TEE_PROXY_SYSINFO
*/
#ifndef __DRMTEEPROXYFORMATS_H__
#define __DRMTEEPROXYFORMATS_H__ 1

ENTER_PK_NAMESPACE;

PREFAST_PUSH_DISABLE_EXPLAINED( __WARNING_POOR_DATA_ALIGNMENT_25021, "Ignore poor alignment of XBinary data structures" );

#define DRM_TEE_PROXY_CURRENT_VERSION 1
#define DRM_TEE_XB_PROXY_STACK_SIZE 1024
#define DRM_TEE_PROXY_MAX_STACK_SIZE_FOR_SYSINFO 300

typedef enum __tagXB_DRM_TEE_PROXY_METHOD_REQ_TYPES 
{
    XB_DRM_TEE_REQ_METHOD_INFO_ENTRY_TYPE   = 0x1,
    XB_DRM_TEE_CONTEXT_ENTRY_TYPE           = 0x2,
    XB_DRM_DWORD_PARAMS_ENTRY_TYPE          = 0x3,
    XB_DRM_ID_PARAMS_ENTRY_TYPE             = 0x4,
    XB_DRM_QWORD_PARAMS_ENTRY_TYPE          = 0x5,
    XB_DRM_TEE_BYTE_BLOB_PARAMS_ENTRY_TYPE  = 0x6,
    XB_DRM_DWORDLIST_PARAMS_ENTRY_TYPE      = 0x7,
} XB_DRM_TEE_PROXY_METHOD_REQ_TYPES;
/* Count Includes XB_OBJECT_GLOBAL_HEADER */
#define XB_DRM_TEE_PROXY_METHOD_REQ_TYPE_COUNT       8
#define XB_DRM_TEE_PROXY_METHOD_REQ_FORMAT_ID        XB_DEFINE_QWORD_FORMAT_ID( 'T', 'E', 'E', '_', 'M', 'R', 'E', 'Q' )

typedef struct __tagXB_DRM_TEE_REQ_METHOD_INFO
{
    DRM_BOOL      fValid;
    DRM_DWORD     dwMethodID;
    DRM_DWORD     dwResult;
} XB_DRM_TEE_REQ_METHOD_INFO;

typedef struct __tagXB_DRM_TEE_CONTEXT
{
    DRM_BOOL             fValid;
    DRM_XB_BYTEARRAY     xbbaContext;
} XB_DRM_TEE_CONTEXT;

typedef struct __tagXB_DRM_DWORD_PARAMS
{
    DRM_BOOL                         fValid;
    struct __tagXB_DRM_DWORD_PARAMS *pNext;

    DRM_DWORD                        dwParamIndex;
    DRM_DWORD                        dwParamValue;
} XB_DRM_DWORD_PARAMS;

typedef struct __tagXB_DRM_ID_PARAMS
{
    DRM_BOOL                      fValid;
    struct __tagXB_DRM_ID_PARAMS *pNext;

    DRM_DWORD                     dwParamIndex;
    DRM_ID                        idParamValue;
} XB_DRM_ID_PARAMS;

typedef struct __tagXB_DRM_QWORD_PARAMS
{
    DRM_BOOL                         fValid;
    struct __tagXB_DRM_QWORD_PARAMS *pNext;

    DRM_DWORD                        dwParamIndex;
    DRM_UINT64                       qwParamValue;
} XB_DRM_QWORD_PARAMS;

typedef struct __tagXB_DRM_TEE_BYTE_BLOB_PARAMS
{
    DRM_BOOL                                 fValid;
    struct __tagXB_DRM_TEE_BYTE_BLOB_PARAMS *pNext;

    DRM_DWORD                                dwParamIndex;
    DRM_DWORD                                eType;
    DRM_DWORD                                dwSubType;
    DRM_XB_BYTEARRAY                         xbbaData;
} XB_DRM_TEE_BYTE_BLOB_PARAMS;

typedef struct __tagXB_DRM_DWORDLIST_PARAMS
{
    DRM_BOOL                             fValid;
    struct __tagXB_DRM_DWORDLIST_PARAMS *pNext;

    DRM_DWORD                            dwParamIndex;
    DRM_XB_DWORDLIST                     dwlParamValue;
} XB_DRM_DWORDLIST_PARAMS;

typedef struct __tagXB_DRM_TEE_PROXY_METHOD_REQ
{
    DRM_BOOL                        fValid;
    XB_DRM_TEE_REQ_METHOD_INFO      MethodInfo;
    XB_DRM_TEE_CONTEXT              MethodContext;
    XB_DRM_DWORD_PARAMS            *DwordParams;
    XB_DRM_ID_PARAMS               *IdParams;
    XB_DRM_QWORD_PARAMS            *QwordParams;
    XB_DRM_TEE_BYTE_BLOB_PARAMS    *BlobParams;
    XB_DRM_DWORDLIST_PARAMS        *DwordListParams;
} XB_DRM_TEE_PROXY_METHOD_REQ;

DRM_EXPORT_VAR extern DRM_GLOBAL_CONST DRM_XB_FORMAT_DESCRIPTION s_XB_DRM_TEE_PROXY_METHOD_REQ_FormatDescription[1];

typedef enum __tagXB_DRM_TEE_PROXY_APPINFO_TYPES 
{
    XB_DRM_TEE_PROXY_APPINFO_BASE_INFO_ENTRY_TYPE  = 0x1,
} XB_DRM_TEE_PROXY_APPINFO_TYPES;
/* Count Includes XB_OBJECT_GLOBAL_HEADER */
#define XB_DRM_TEE_PROXY_APPINFO_TYPE_COUNT       2
#define XB_DRM_TEE_PROXY_APPINFO_FORMAT_ID        XB_DEFINE_QWORD_FORMAT_ID( 'T', 'E', 'E', '_', 'A', 'P', 'P', 'I' )

typedef struct __tagXB_DRM_TEE_PROXY_APPINFO_BASE_INFO
{
    DRM_BOOL     fValid;
    DRM_ID       idApplication;
} XB_DRM_TEE_PROXY_APPINFO_BASE_INFO;

typedef struct __tagXB_DRM_TEE_PROXY_APPINFO
{
    DRM_BOOL                               fValid;
    XB_DRM_TEE_PROXY_APPINFO_BASE_INFO     BaseInfo;
} XB_DRM_TEE_PROXY_APPINFO;

DRM_EXPORT_VAR extern DRM_GLOBAL_CONST DRM_XB_FORMAT_DESCRIPTION s_XB_DRM_TEE_PROXY_APPINFO_FormatDescription[1];

typedef enum __tagXB_DRM_TEE_PROXY_SYSINFO_TYPES 
{
    XB_DRM_TEE_PROXY_SYSINFO_BASE_INFO_ENTRY_TYPE  = 0x1,
    XB_DRM_TEE_PROXY_SYSINFO_OEM_INFO_ENTRY_TYPE   = 0x2,
} XB_DRM_TEE_PROXY_SYSINFO_TYPES;
/* Count Includes XB_OBJECT_GLOBAL_HEADER */
#define XB_DRM_TEE_PROXY_SYSINFO_TYPE_COUNT       3
#define XB_DRM_TEE_PROXY_SYSINFO_FORMAT_ID        XB_DEFINE_QWORD_FORMAT_ID( 'T', 'E', 'E', '_', 'S', 'Y', 'S', 'I' )

typedef struct __tagXB_DRM_TEE_PROXY_SYSINFO_BASE_INFO
{
    DRM_BOOL      fValid;
    DRM_ID        idUnique;
    DRM_DWORD     dwPKMajorVersion;
    DRM_DWORD     dwPKMinorVersion;
    DRM_DWORD     dwPKBuildVersion;
    DRM_DWORD     dwPKQFEVersion;
} XB_DRM_TEE_PROXY_SYSINFO_BASE_INFO;

typedef struct __tagXB_DRM_TEE_PROXY_SYSINFO_OEM_INFO
{
    DRM_BOOL             fValid;
    DRM_DWORD            dwVersion;
    DRM_XB_BYTEARRAY     xbbaManufacturerName;
    DRM_XB_BYTEARRAY     xbbaModelName;
    DRM_XB_BYTEARRAY     xbbaModelNumber;
    DRM_XB_DWORDLIST     dwlFunctionMap;
    DRM_XB_BYTEARRAY     xbbaSystemProperties;
} XB_DRM_TEE_PROXY_SYSINFO_OEM_INFO;

typedef struct __tagXB_DRM_TEE_PROXY_SYSINFO
{
    DRM_BOOL                               fValid;
    XB_DRM_TEE_PROXY_SYSINFO_BASE_INFO     BaseInfo;
    XB_DRM_TEE_PROXY_SYSINFO_OEM_INFO      OEMInfo;
} XB_DRM_TEE_PROXY_SYSINFO;

DRM_EXPORT_VAR extern DRM_GLOBAL_CONST DRM_XB_FORMAT_DESCRIPTION s_XB_DRM_TEE_PROXY_SYSINFO_FormatDescription[1];

PREFAST_POP;

EXIT_PK_NAMESPACE;

#endif /* __DRMTEEPROXYFORMATS_H__ */
